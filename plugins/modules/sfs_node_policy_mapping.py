#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright 2021 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sfs_node_policy_mapping
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type


DOCUMENTATION = """
---
module: configure_node_policy_mapping
short_description: Configure SFS node policy-mapping on Dell SmartFabric Services.
description:
  - This module is used to manage SFS node-policy-mapping configuration, Route policy must be created using the sfs-route-policy before the policy mapping is invoked.
author: Ranjith Sunkesula <Ranjith_Senkesula@Dellteam.com>
options:
  node:
    description:
      - Configures the name of the node policy mapping.
    type: str
    required: False
  policy_list:
    description:
      - Configures the the policy list.
    type: list
    required: False
  state:
    description:
      - The state the configuration should be left in.
    type: str
    default: present
    required: False
"""
EXAMPLES = '''
Copy below YAML into a playbook (e.g. play.yml) and run as follows:

#$ ansible-playbook -i inventory play.yaml
- hosts: all
  gather_facts: false
  collections:
    - dellemc.sfs
  tasks:
    - name: Provision Configs
      block:
        - name: Node Policy Mapping
          dellemc.sfs.sfs_node_policy_mapping:
             node: 19HQXC2
             policy_list:
                - policybgp100
                - policybgp101
             state: "present"
           register: result

    - name: Debug the result
      debug: var=result
'''

from ansible_collections.dellemc.sfs.plugins.module_utils.sfs.sfs import SFSConfig, extract_id_value
from ansible.module_utils.basic import AnsibleModule


class SFSNodePolicyMapping(SFSConfig):
    def __init__(self):
        argument_spec = {
            'state': {
                'type': 'str',
                'default': "present",
                'required': False
            },
            'node': {
                'type': 'str',
                'required': True
            },
            'policy_list': {
                'type': 'list',
                'required': True
            }
        }
        module = AnsibleModule(argument_spec=argument_spec)
        SFSConfig.__init__(self, module)
        self.payload_arg_map = {
            'NodeId': 'node',
            'PolicyId': 'policy_list'
        }
        self.path = "FabricNodes"
        self.resource_id = self.module.params['node']


if __name__ == "__main__":
    SFSNodePolicyMapping().execute_module()
