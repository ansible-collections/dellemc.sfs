#!/usr/bin/env python
# pylint: disable=consider-using-f-string
# -*- coding: utf-8 -*-
# Copyright 2021 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sfs_prefix_list_rules
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

DOCUMENTATION = """
---
module: sfs_prefix_list_rules
short_description: Configure prefix list rules on Dell SmartFabric Services.
description:
  - This module is used to manage the prefix list rules.
author: Ranjith Sunkesula <Ranjith_Senkesula@Dellteam.com>
options:
  seq_no:
    description:
      - Configures the sequence number.
    type: int
    required: False
  ip_address:
    description:
      - Configure the IP address.
    type: str
    required: False
  ip_address_prefixLen:
    description:
      - Configures the prefix length.
    type: str
    required: False
  comparator:
    description:
      - Configures the comparator.
    type: str
    required: False
  value1:
    description:
      - Configures value1.
    type: int
    required: False
  packet_handling:
    description:
      - Configures packet handling.
    type: str
    required: False
  destination_prefix:
    description:
      - Configures destination prefix.
    type: str
    required: False
  destination_prefixLen:
    description:
      - Configures destination prefix length.
    type: int
    required: False
  state:
    description:
      - The state the configuration should be left in.
    type: str
    default: present
    required: False
"""
EXAMPLES = '''
Copy below YAML into a playbook (e.g. play.yml) and run as follows:

#$ ansible-playbook -i inventory play.yaml
- hosts: all
  gather_facts: false
  collections:
    - dellemc.sfs
  tasks:
    - name: Provision Configs
      block:
        - name: Prefix List Rules
          dellemc.sfs.sfs_prefix_list_rules:
            name: "uplink-prefix"
            seq_no: 100
            ip_address: "10.11.0.33"
            ip_address_prefixLen: 16
            comparator: "le-only"
            value1: 24
            packet_handling: "deny"
            destination_prefix: "172.16.0.68"
            destination_prefixLen: 16
            state: 'present'
          register: result

    - name: Debug the result
      debug: var=result

'''


from ansible_collections.dellemc.sfs.plugins.module_utils.sfs.sfs import SFSConfig, extract_id_value
from ansible.module_utils.basic import AnsibleModule


class SFSPrefixListRules(SFSConfig):
    def __init__(self):
        argument_spec = {
            'state': {
                'type': 'str',
                'default': "present",
                'required': False
            },
            'seq_no': {
                'type': 'int',
                'required': False
            },
            'ip_address': {
                'type': 'str',
                'required': False
            },
            'ip_address_prefixLen': {
                'type': 'int',
                'required': False
            },
            'comparator': {
                'type': 'str',
                'required': False
            },
            'value1': {
                'type': 'int',
                'required': False
            },
            'packet_handling': {
                'type': 'str',
                'required': False
            },
            'name': {
                'type': 'str',
                'required': False
            },
            'destination_prefixLen': {
                'type': 'int',
                'required': False
            },
            'destination_prefix': {
                'type': 'str',
                'required': False
            }
        }

        module = AnsibleModule(argument_spec=argument_spec)
        SFSConfig.__init__(self, module)
        self.payload_arg_map = {
            'SeqNo': 'seq_no',
            'IpAddress': 'ip_address',
            'IpAddressPrefixLen': 'ip_address_prefixLen',
            'Comparator': 'comparator',
            'Value1': 'value1',
            'PacketHandling': 'packet_handling',
            'DestinationPrefix': 'destination_prefix',
            'DestinationPrefixLen': 'destination_prefixLen'
        }

        self.path = "IpPrefixLists('%s')/IpPrefixListRules" % (self.module.params['name'])
        self.resource_id = self.module.params['seq_no']


if __name__ == "__main__":
    SFSPrefixListRules().execute_module()
