#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright 2021 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sfs_port_properties
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

DOCUMENTATION = """
---
module: sfs_port_properties
short_description: Port properties configuration.
description:
  -  This module is used to set up the port properties such as MTU, auto-neg, configured-speed, admin-status, name, and description.
author: Ranjith Sunkesula <Ranjith_Senkesula@Dellteam.com>
options:
  description:
    description:
      - Configures the port description.
    type: str
    required: False
  node_id:
    description:
      - Configures the service tag of the switch.
    type: str
    required: False
  admin_status:
    description:
      - Configures the port admin status.
    type: str
    required: False
  mtu:
    description:
      - Configures the port MTU; range is 1312-9216.
    type: int
    required: False
  auto_neg:
    description:
      - Configures auto-negotiation.
    type: str
    required: False
  configured_speed:
    description:
      - Configures the port configured speed.
    type: int
    required: False
  name:
    description:
      - Configures a name.
    type: str
    required: False
  state:
    description:
      - The state the configuration should be left in.
    type: str
    default: present
    required: False
"""
EXAMPLES = '''
Copy below YAML into a playbook (e.g. play.yml) and run as follows:

#$ ansible-playbook -i inventory play.yaml
- hosts: all
  gather_facts: false
  collections:
    - dellemc.sfs
  tasks:
    - name: Provision Configs
      block:
        - name: Port property configuration
          dellemc.sfs.sfs_port_properties:
             name: ethernet1/1/8
             target_port: OS10SIM:ethernet1/1/8
             description: Interface_8
             node_id: OS10SIM
             admin_status: Enabled
             mtu: 9216
             auto_neg: Enabled
             configured_speed: 0
             state: 'present'
           register: result

     - name: Debug the result
       debug: var=result
'''


from ansible_collections.dellemc.sfs.plugins.module_utils.sfs.sfs import SFSConfig, extract_id_value
from ansible.module_utils.basic import AnsibleModule


class SFSPortProperties(SFSConfig):
    def __init__(self):
        argument_spec = {
            'state': {
                'type': 'str',
                'default': "present",
                'required': False
            },
            'description': {
                'type': 'str',
                'required': False
            },
            'admin_status': {
                'type': 'str',
                'required': False
            },
            'mtu': {
                'type': 'int',
                'required': False
            },
            'auto_neg': {
                'type': 'str',
                'required': False
            },
            'configured_speed': {
                'type': 'int',
                'required': False
            },
            'name': {
                'type': 'str',
                'required': False
            },
            'target_port': {
                'type': 'str',
                'required': False
            },
            'node_id': {
                'type': 'str',
                'required': False
            }
        }
        module = AnsibleModule(argument_spec=argument_spec)
        SFSConfig.__init__(self, module)
        self.payload_arg_map = {
            'Description': 'description',
            'NodeId': 'node_id',
            'AdminStatus': 'admin_status',
            'Mtu': 'mtu',
            'AutoNeg': 'auto_neg',
            'ConfiguredSpeed': 'configured_speed',
            'Name': 'name'
        }

        self.path = "Interfaces"
        self.resource_id = self.module.params['target_port']


if __name__ == "__main__":
    SFSPortProperties().execute_module()
